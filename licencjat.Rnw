\documentclass[12pt,a4paper]{report}
\usepackage[utf8]{inputenc}
\usepackage{amsmath}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{polski}
\usepackage{ifthen}
\usepackage{url}
\usepackage{hyperref}
\usepackage[left=2cm,right=2cm,top=2cm,bottom=2cm]{geometry}
\usepackage{natbib} %bibtex!!
\usepackage[polish, section]{dyschemist}
\usepackage{Sweave}
\author{Weronika Lara}
\title{Numeryczne rozwiązywanie równań różniczkowych drugiego rzędu z warunkami brzegowymi}
\begin{document}
\SweaveOpts{concordance=TRUE}
\begin{titlepage}
\begin{flushleft}
\end{flushleft}
\begin{center}
\textsc{{\huge Politechnika Łódzka}}
\end{center}
\bigskip
\bigskip
\begin{center}
\textsc{{\Large Wydział Fizyki Technicznej, Informatyki i~Matematyki Stosowanej}}
\end{center}
\bigskip
\bigskip
\begin{Large}
Kierunek: Matematyka 
\\Specjalność: Matematyczne metody analizy danych biznesowych

\end{Large}
\bigskip
\bigskip
\noindent\hrulefill
\begin{center}
{\textbf{{\Large Numeryczne rozwiązywanie równań różniczkowych drugiego rzędu z warunkami brzegowymi.}}}
\end{center}
\begin{flushright}
{\large 
Weronika Lara

Nr albumu: 
204107
}
\end{flushright}
\noindent\hrulefill
\bigskip
\bigskip
\begin{center}
{\large Praca licencjacka
napisana w~Instytucie Matematyki 
\\Politechniki Łódzkiej 
\bigskip
\bigskip
\\Promotor: dr, mgr inż. Piotr Kowalski
 }
\end{center}
\bigskip
\bigskip
\bigskip
\bigskip
\begin{center}
{\textsc{\large Łódź, wrzesień 2019}}
\end{center}
\end{titlepage}
\tableofcontents

\chapter{Wstęp}

Tematem tej pracy są numeryczne metody rozwiązywania równań różniczkowych drugiego rzędu z warunkami brzegowymi. Same równania różniczkowe są szeroko omówionym zagadnieniem w programie studiów. Jednakże ich naturalna kontynuacja - w postaci metod numerycznych - jest omówiona jedynie szczątkowo. Grupuje ona techniki algorytmiczne i komputerowe, które pozwalają rozwiązywać praktyczne problemy opisywane za pomocą równań. W tej pracy omówimy najprostsze techniki rozwiązywania przybliżonego równań różniczkowych (tak zwyczajnych jak i cząstkowych) skupiając się w znacznej części na zaprezentowaniu działających implementacji własnych. Rozpoczynamy od najprostszych schematów tzw. otwartych, chcąc pokazać czytelnikowi zmianę stopnia trudności po przejściu do zagadnień brzegowych. Rozważania swoje ograniczamy jedynie do równań drugiego stopnia liniowych, gdyż jest to i tak dostatecznie bogata klasa problemów - do zaprezentowania różnic pomiędzy podejściami. 

Praca uporządkowana jest w następujący sposób. W rozdziale 2 znaleźć można wybrane definicje z zakresu równań różniczkowych oraz inne definicje z tematów znajdujących się w programie studiów. W rozdziale trzecim prezentujemy teorię dotyczącą numerycznego rozwiązywania zagadnień początkowych dla równań zwyczajnych. Rozdział ten zakończony jest prezentacją własnej implementacji metod otwartego Eulera oraz Rungego-Kutty stopnia czwartego. W rozdziale 4 znajduje się natomiast ogólna teoria dotycząca zagadnień brzegowych. Na początku rozważane jest równanie zwyczajne drugiego rzędu, przy pomocy którego przedstawimy różnicę w podejściach pomiędzy zagadnieniami Cauchy'ego, a zagadnieniami brzegowymi. W dalszej części przedstawimy metodę przybliżonego rozwiązywania równań eliptycznych, przy pomocy którego przedstawimy problemy jakie charakteryzują równania cząstkowe w porównaniu do równań zwyczajnych. 

\chapter{Preliminaria}

\section{Oznaczenia w pracy}

W całości pracy stosowane są następujące oznaczenia dla powszechnie znanych pojęć.
\begin{itemize}
\item $\setN$ zbiór liczb naturalnych.
\item $\setR$ zbiór liczb rzeczywistych.
\item $K$ ciało nad zbiorem liczbowym.
\item $\delta \Omega $ domknięcie zbioru.
\item $J$ dowolny przedział.
%\item $\operatorname{IntB}$ wnętrze zbioru.
\item $\ball{(t_0,x_0)}{\delta}$ kula o pomieniu $\delta$ w punkcie $(t_0,x_0)$.
\item $C^k(U) = \set{u: U \to \setR} $ funkcja $u$ jest k-krotnie różniczkowalna w sposób ciągły na przedziale $U$ \citep{evans2012rownania}.
\item $\ddx{t} f(t)$ - oznaczać będzie pochodna funkcji $f$ po zmiennej $t$. W szczególności $\ddx[^n]{t^n}$ oznaczać będzie $n$-tą pochodną po tejże zmiennej.
\item $t, x, y, u$ - W przekroju pracy rozważane są równania zwyczajne oraz cząstkowe. W przypadku równań zwyczajnych najczęściej symbolem $t$ oznaczać będziemy zmienną, natomiast $x$ będzie używane do oznaczania poszukiwanej funkcji. W przypadku równań cząstkowych natomiast symbolami $t,x,y$ oznaczać będziemy zmienne (czasami również $x_1,\ldots,x_n$) natomiast $u$ oznaczać będzie naszą nieznaną i poszukiwaną funkcję.
\end{itemize}

\section{Elementy rachunku różniczkowego i całkowego}

Poniżej zaprezentujemy wybranego pojęcia z podstaw rachunku różniczkowego. Część z przypomnianych tu pojęć, to najbardziej podstawowe elementy tej teorii. Przypominamy je jednak, gdyż w pracy wprowadzane są ich odpowiedniki z teorii równań różnicowych i uznajemy za wartościowe porównanie ich budowy do oryginałów. 

\begin{definition}[Pochodna \citep{andrzejczak2019analiza1}]
Dla dowolnej funkcji rzeczywistej $f$ określonej na przedziale $J \subset \setR $ i dowolnego punktu wewnętrznego $ t \in J$ mówimy, że funkcja $f$ jest różniczkowalna w punkcie $t$, jeśli istnieje granica
$$
\limit_{x \to t}  \frac{f(x) - f(t)}{x-t}.
$$
Liczbę $\ddx{x}f(t)$ nazywamy wówczas pochodną funkcji $f$ w punkcie $t$.  
\end{definition}
\begin{definition}[Funkcja różniczkowalna \citep{andrzejczak2019analiza1}]
Funkcję $ f: J \to \setR $ nazywamy różniczkowalną, jeśli jest ona różniczkowalna w każdym punkcie swej dziedziny. Funkcję $\ddx{x}f: x \mapsto \ddx{x}f(x)$ dla $x \in J$,  $\ddx{x}f : J \to \setR $, nazywamy wówczas pochodną funkcji $f$. 
\end{definition}

\begin{definition}[Pochodne cząstkowe \citep{grabowski1997analiza}]
Niech $f$ będzie funkcją odwzorowującą zbiór $D \subset \setR^k $ w przestrzeń unormowaną $Y$. Zatem $f$ jest funkcją $k$ zmiennych rzeczywistych $\set{x_1,\cdots,x_k}$. Niech $a=(a_1,\cdots,a_k) \in D $. Dla ustalonego wskaźnika $i \leq k$ rozważmy funkcję 
\begin{equation}\label{def_poch_czastk}
x_i \mapsto f(a_1,\cdots,a_{i-1},x_i,a_{i+1},\cdots,a_k).
\end{equation}
określoną na zbiorze 
$$
\set{x_i \in \setR: (a_1,\cdots,a_{i-1},x_i,a_{i+1},\cdots,a_k) \in D}.
$$
Jeżeli funkcja \eqref{def_poch_czastk} jest różniczkowalna w punkcie $a_i$, to mówimy, że funkcja $f$ jest różniczkowalna względem zmiennej $x_i$, w punkcie $a$. Pochodną funkcji \eqref{def_poch_czastk} w punkcie $a$ nazywamy pochodną cząstkową funkcji $f$ względem zmiennej $x_i$ w punkcie $a$ i oznaczamy przez $\ddx{x_i} f(a) $. Innymi słowy 
\begin{equation}
\ddx{x_i} f(a) = \lim_{x_i \to a} = \frac{f(a_1,\cdots,a_{i-1},x_i,a_{i+1},\cdots,a_k) - f(a_1,\cdots,a_{i-1},a_i,a_{i+1},\cdots,a_k)}{x_i - a} .
\end{equation}
\end{definition}


%\begin{definition}[klasa $C^{(k)}$]
%Niech $U$ będzie otwartym podzbiorem $ \setR^n $, $ f: U \to \setR $. Mówimy, że funkcja $f$ jest klasy $C^{(k)}$ na $U$,  gdy w zbiorze $U$ istnieją wszystkie pochodne cząstkowe rzędu $k$ funkcji $f$ oraz są one funkcjami ciągłymi w zbiorze $U$. 
%\end{definition}

%\begin{definition}[Wielomian Taylora \citep{andrzejczak2019analiza1}]
%Dla $ n \in \setN $ i dowolnej funkcji $ f: J \to \setR $ n-krotnie różniczkowalnej w punkcie $t$ przedziału $ J \subset \setR $, dla $x \in \setR $  wielomian: 
%\begin{equation}
%T_{t}^{n}f(x) = \sum_{k=0}^{n} \frac{f^{(k)}(t)}{k!} (x-t){^k}  
%\end{equation}
%nazywamy wielomianem Taylora n-go stopnia funkcji $f$ w $t$.
%\end{definition}

%\begin{theorem}[Peano, o reszcie \citep{andrzejczak2019analiza1}] \label{wzor_Peano}
%Dla $n \in \setN$ i dowolnej funkcji $ f: J \to \setR $ n-krotnie różniczkowalnej w punkcie $t$ przedziału $J$, dla $x \in J$ zachodzi równość:
%\begin{equation}
%f(x) = T_{t}^{n}f(x) + r_{t}^{n}(x)(x-t)^n ,
%\end{equation}
%gdzie $r_{t}^{n} : J \setminus t \to \setR $ jest funkcją, taką że $ \lim_{x \to t} r_{t}^{n}(x) = 0 $
%\end{theorem}
%\begin{definition}[Wzór Taylora \cite{andrzejczak2019analiza1}]
%Wzór \ref{wzor_Peano} nazywamy wzorem Taylora z resztą, czyli różnicą 
%$$
%R_{t}^{n} := f(x) - T_{t}^{n}f(x), 
%$$
%w postaci Peano. 
%\end{definition}
%\begin{definition}[Iloraz różnicowy \citep{grabowski1997analiza}]
%Jeżeli $ f: J \to \setR $ oraz $ a \in J$ to ilorazem różnicowym funkcji $f$ w punkcie $a$ nazywamy %funkcję $ (\Delta_{a}f) : J \setminus a \to \setR $ określoną wzorem: 
%$$
%(\Delta_{a}f)(x) = \frac{f(x) - f(a)}{x-a}
%$$
%\end{definition}
%TODO definicja operator różnicowy wprzód
\begin{definition}[Operator różnicowy wprzód \citep{marcinkowski2011numeryczne}]\label{operator_wporzd}
Dla ustalonego kroku $h>0 $, operatorem różnicowym wprzód nazywać będziemy 
$$
\delta_h u(x) = \frac{u(x+h) - u(x)}{h}
$$
\end{definition}

%TODO definicja operator różnic0wy w tył
\begin{definition}[Operator różnicowy w tył \citep{marcinkowski2011numeryczne}]\label{operator_wtyl}
Dla ustalonego kroku $h>0$. Operatorem różnicowym w tył nazywać będziemy 
$$
\overline{\delta_h} u(x) = \frac{u(x)-u(x-h)}{h} 
$$
\end{definition}

%TODO co to jest równanie różnicowe


\section{Równania różniczkowe zwyczajne}

\begin{definition}[Postać ogólna równania różniczkowego \citep{marcinkowski2011numeryczne}]
Niech $F \colon \setR \times \setR^{n+1} \to \setR$. Postacią ogólną równania różniczkowego zwyczajnego nazywamy równianie: 
\begin{equation*}
F(t, x(t), \ddx{t} x(t),..., \ddx[^k]{t^k} x(t) ) = 0, \quad t \in (a,b)
\end{equation*}
gdzie $x \in \Ck{k}{(a,b); \setR^n}$ dla $F \colon D \to \setR^n$ i D zbioru otwartego w $\setR^{1+(k+1)n}$. 
Rzędem takiego równania nazywamy wtedy liczbę naturalną $k$. 
\end{definition}

Powyższa postać równania różniczkowego nie jest jednak najpowszechniej spotykaną. Powyższą postać możnaby utożsamiać z postacią uwikłaną funkcji. Częściej natomiast interesują nas równania różniczkowe zadane w postaci jawnej.

\begin{definition}[Postać jawna równania różniczkowego zwyczajnego \citep{marcinkowski2011numeryczne}]
Równaniem różniczkowym zwyczajnym w postaci jawnej nazwiemy równanie postaci
$$
\ddx[{^k }]{t^k}x(t) = \function{f}{t,x,\ddx{t}x(t), \ldots, \ddx[{^{k-1}}]{t^{k-1}} x(t)}, \quad t\in (a,b)
$$
którego rozwiązaniem jest funkcja $x \in \Ck{k}{(a,b), \setR^n}$.
\end{definition}
\begin{definition}[Zagadnienie Cauchy'ego n-tego rzędu \citep{palczewski1999rownania}]
Jeśli dane jest równanie różniczkowe rzędu $n$ w przestrzeni $\setR^m$, to zagadnienie początkowe dla tego równania przyjmuje postać 
\begin{equation} 
\left\{\begin{array}{ll}
\ddx[^n]{t^n} x(t) = f(t,x(t), \ddx{t}x(t), \cdots, \ddx[^{n-1}]{t^{n-1}}x(t),) & t \in (t_0,b),   \\
x(t_0) = x_0, & \\
\ddx{t}x(t_0) = x_1, & \\
\vdots & \\
\ddx[^{n-1}]{t^{n-1}}x(t_0) = x_{n-1}, &
\end{array} \right.
\end{equation}
gdzie $ \set{x_0,\cdots,x_{n-1}}$ są wektorami m-wymiarowymi, dla $t_0 \in (a,b)$. 
\end{definition}


W dalszej części pracy zakładać będziemy, że nasze równania różniczkowe zawsze będą w postaci jawnej.


\subsection{Równanie różniczkowe zwyczajne pierwszego rzędu}

Skupmy na chwilę naszą uwagę jedynie na równaniu różniczkowym rzędu pierwszego. Wtedy równanie takie przyjmuje oczywiście postać 

$$
\ddx{t}x(t) = f(t,x(t)) \quad t \in (a,b) ,
$$ 
gdzie $(a,b) \subset \setR$ jest dowolnym nietrywialnym i ograniczonym przedziałem w $\setR$, oraz $ f \colon (a,b) \times G \subset \setR \times \setR^m \to \setR^m$ będące funkcją ciągłą. $G$ jest tu pewnym zbiorem otwartym w $\setR^m$. 

Interesować nas będzie między innymi następująca klasa problemów nazywana zagadnieniami początkowymi lub zagadnieniami Cauchy'ego.

\begin{problem}[Zagadnienie Cauchy'ego pierwszego rzędu \citep{marcinkowski2011numeryczne}] \label{prob-zagadnienie-cauchy}
Zagadnienie Cauchy'ego pierwszego rzędu nazywamy równanie różniczkowe zwyczajne z warunkiem początkowym nazywamy problem postaci:
\begin{equation} 
\left\{\begin{array}{ll}
\ddx{t} x(t) = f(t,x(t)), & t \in (t_0,b) ,\\
x(t_0) = x_0 &,
\end{array} \right.
\end{equation}
gdzie $t_0 \in (a,b)$, $x_0 \in G$ są ustalone z góry. 
\end{problem}

\begin{theorem}[Peano \citep{marcinkowski2011numeryczne}]
Jeśli $f$ jest funkcją ciągłą na otoczeniu $(t_{0},x_{0})$, to istnieje rozwiązanie problemu \ref{prob-zagadnienie-cauchy} określone w pewnym otoczeniu $t_{0}$. 
\end{theorem}

\begin{theorem}[Picarda - Lindelfa \citep{marcinkowski2011numeryczne}]
Jeśli $f$ jest funkcją ciągłą na otoczeniu $(t_{0},x_{0})$ oraz $f$ jest funkcją lipschtizowską względem $x$ w pewnej kuli $\ball{(t_0,x_0)}{\delta}$. Tzn.
 istnieje taka $L\geq 0$, że dla każdych $((t,x),(t,y) \in \ball{(t_0,x_0)}{\delta} $ zachodzi
$$
  \norm{f(t,x) - f(t,y)} \leq L \norm{ x-y} 
$$
 to istnieje $ c> 0 $ i $x \in \Ck{1}{(t_0-c,t_0+c); \setR^{n} }  $ takie,że $x$ jest jednoznacznym rozwiązaniem (\ref{prob-zagadnienie-cauchy}).
\end{theorem}
\subsection{Równania różniczkowe liniowe drugiego rzędu }
\begin{problem}[Zagadnienie Cauchy'ego drugiego rzędu]
Niech $c_1 , c_2 >0 $ oraz $t_0 \in (a,b) $ , $ x_0 \in G $, gdzie $t_0, x_0$ są ustalone.
Zagadnieniem Cauchy'ego dla równań różniczkowych liniowych zwyczajnych drugiego z warunkiem początkowym postaci nazywamy poniższy problem:
\begin{equation}
\left\{\begin{array}{ll}
\ddx [^2]{t} x(t) + c_1\ddx{t} x(t) + c_2x(t) = f(t), & t \in (a,b),\\
x(t_0) = s ,& \\
\ddx{t} x(t_0) = v &,
\end{array} \right.
\end{equation}
gdzie $ s$ i $v$ to ustalone wartości.
\end{problem}

\begin{problem}[Zagadnienie brzegowe]
Zagadnieniem brzegowym liniowego problemu drugiego rzędu dla $ t \in (a,b) $ będziemy nazywać:
\begin{equation}
\left\{\begin{array}{ll}
\ddx [^2]{t} x(t) + c_1\ddx{t} x(t) + c_2x(t) = f(t), t \in (a,b), & \\
x(a) = \alpha, & \\
x(b) = \beta ,&
\end{array} \right.
\end{equation}
gdzie $\alpha$ i $\beta$ są ustalone. 
\end{problem}
%Pokażemy teraz przykład, który obrazuje zastosowanie równań różniczkowych zwyczajnych. 
%\begin{example}[Model populacji gatunku ]
%Najprostszy model populacji danego gatunku zwierząt:
%\begin{align*}
%\ddx{t}N = aN  t>t_0 \\
 %N(t_0) = x_0 > 0
%\end{align*}
%gdzie $N(t)$ - stan populacji w momencie czasu $t$ i $a$ jest stałą większą od zera, szybkością namnażania %się osobników, zależną od gatunku. Tu możemy podać rozwiązanie $N(t)=\exp(a(t-t_0))$.
%\newline Ten model jest nierealistyczny, ponieważ populacja - nawet izolowana - nie może rosnąć do %nieskończoności. 
%\end{example}
\section{Równania różniczkowe cząstkowe}
Równania różniczkowe cząstkowe są to równania, których rozwiązaniami są funkcje wielu zmiennych oraz w których pojawiają się pochodne cząstkowe. W tej części ograniczymy się do typów, którymi będziemy  posługiwali się  w dalszej części pracy. Wprowadźmy oznaczenie 
\begin{definition}[Operator Laplace'a \citep{evans2012rownania}]
Operatorem Laplace'a (laplasjanem) szukanej funkcji $u: \Omega \to \setR$ nazywamy 
$$
\Delta u  = \sum_{i=1}^{n} u_{x_{i} x_{i}}  
$$
dla $ x \in \Omega \subset \setR^{n} $.
\end{definition}

\subsection{Równania Eliptyczne}
W tej sekcji pokażemy podstawowe przykłady równań eliptycznych. 
\begin{problem}[Równanie Laplace'a]
Równanie eliptyczne postaci 
$$
\Delta u(x) = 0, \quad x \in \Omega, 
$$
nazywamy równaniem Laplace'a.
\end{problem}
Dokładając niejednorodność i warunek brzegowy otrzymamy inny przypadek zwany równaniem Poissona.
\begin{problem}[Równanie Poissona]
Niech $u \in C^2(\Omega) \cap C(\overline{\Omega})$ wówczas równanie eliptyczne postaci: 
\begin{equation}
\left\{\begin{array}{ll}
\Delta u(x) = f(x), & x \in \Omega \\
u(s) = g(s),& s \in \delta \Omega.
\end{array} \right. 
\end{equation}
nazywamy równaniem Poissona.
\end{problem}
Możemy również wyróżnić ogólniejszą definicję równania eliptycznego drugiego rzędu. Rozważmy równanie różniczkowe liniowe drugiego rzędu dla ogólnego operatora liniowego drugiego rzędu $L$, określonego dla $ u \in C^2(G)$ dla $G \subset \setR^{n}$ : 
\begin{equation}\label{line operator}
Lu = -\sum_{k,l =1}^{n} a_kl(x) \ddx[u^2]{x^k} (x) + c(x)u(x) = f(x) 
\end{equation}
gdzie $ a_{kl}, b_{k}, c, f, $ są danymi funkcjami określonymi na $G \subset \setR^N$ .
\begin{definition}
Mówimy, że równanie  \eqref{line operator} jest eliptyczne w punkcie $x$ gdy macierz $A(x) = (a_{kl}(x))_{kl=1,\cdots,n}$ jest dodatnio określona tzn dla dowolnego $ \xi \in \setR^{n}$ zachodzi :
$$
\xi^{T} A(x) \xi \geq 0
$$
\end{definition}
Istnieją również równania hiperboliczne pierwszego i drugiego rzędu oraz równania paraboliczne, ale nie będą one omawiane w naszej pracy. 
%\subsection{Równania hiperboliczne pierwszego rzędu}
%Dla pewnego $ x \in \Omega \subset \setR^{N} $ równaniem różniczkowym hiperbolicznym pierwszego rzędu %nazywamy równanie postaci:
%$$
%F(x,u,\ddx[{ u}]{u},...,\ddx[{u}]{u^N}) = 0
%$$
%gdzie $F : \Omega \times G \subset \Omega \times \setR \times \setR^{N} \to \setR$ i obszaru $\Omega %%\subset \setR^n $
%\newline
%W szczególności 
%$$
%F(x,u,\nabla u) = \vec{a(x)}^T \nabla u + b(x)
%$$
%dla danych funkcji $ a_k,b,c: \Omega \to \setR$. 
%\subsection{Równania hiperboliczne drugiego rzędu} 
%Dla dowolnego $t>0$ oraz $ x \in \Omega $ równaniem liniowym hiperbolicznym drugiego rzędu nazywamy równanie 
%$$
%\ddx[u^2]{t^2} - Lu = f
%$$ 
%dla operatora $L$ eliptycznego w $\Omega \subset \setR^N$, gdzie $ u_{tt} = \ddx[^2u]{t}$.  
%\begin{example}[Równanie falowe]
%Niech $x \in \Omega \subset \setR^N $ , dla $ N = 1,2,3$
%$$
%\ddx[^2u]{t^2} - \Delta u = f 
%$$
%\end{example}
%\subsection{Równania paraboliczne}
%Dla pewnego $t>0$, $x \in \Omega \subset \setR^N$ oraz operatora eliptycznego $L$ równanie
%$$
%\ddx[u]{t} -  Lu = f 
%$$
%nazywamy równaniem liniowym parabolicznym drugiego rzędu. 
%\begin{example} [Równanie przewodnictwa cieplnego]
%Niech $t>0$, $x \in \Omega \subset \setR^N $ dla $ N = 1,2,3 $
%$$
%\ddx[u]{t} - \Delta u = f
%$$
%\end{example}

\chapter{Numeryczne zagadnienia początkowe}

\section{Ogólna teoria numerycznego rozwiązywania równań różniczkowych}

Teoria równań różniczkowych dostarcza nam wielu narzędzi do rozwiązywania swoich równań. Nie pozwala jednak na rozwiązywanie znacznej ilości problemów napotykanych w zadaniach inżynierskich. Problemem są tutaj często skomplikowane postacie funkcji, ilość zmiennych definiowanych w problemie, czy też nieprzychylne obliczeniom wartości współczynników w równaniu. Spotyka się również sytuacje, w których równania różniczkowe określają brak istnienia rozwiązania, tymczasem symulacje inżynierskie zdarzają się przeczyć temu faktowi. W takich sytuacjach cenione są metody przybliżonego rozwiązywania równań różniczkowych, obecnie głównie z wykorzystaniem komputerów. 

Aby umożliwić komputerowi rozwiązanie wybranego równania różniczkowego należy jednak pokonać kilka przeszkód. Zauważmy, że równania różniczkowe definiowane są niemal wyłącznie na ciągłych przedziałach dziedziny. Ponadto same przestrzenie naszych rozwiązań (przestrzenie funkcyjne) posiadają nieskończenie (nieprzeliczalnie wiele) różnych funkcji. Stąd aby uzyskać przybliżone rozwiązanie wybranego równania różniczkowego, należy rozważyć podobny do niego model dyskretny - nazywany często dyskretyzacją modelu nieskończonego. 

W teorii numerycznych równań różniczkowych spotyka się dwa rodzaje dyskretyzacji:
\begin{itemize}
\item dyskretyzacja w dziedzinie,
\item dyskretyzacja w przestrzeni funkcyjnej.
\end{itemize}

W drugim rodzaju dyskretyzacji przestrzeń funkcji jest zastępowana skończoną liczbą kombinacji funkcji generujących. Funkcje generujące są wybierane na podstawie pewnych zestawów kryteriów. Jedną z najczęściej spotykanych rodzajów funkcji generujących są tzw. elementy skończone. Tym rodzajem dyskretyzacji nie będziemy zajmować się w ogóle w tej pracy.

Dyskretyzacja w dziedzinie oznacza zastąpienie ciągłego obszaru dziedziny za pomocą skończonej siatki punktów \footnote{po angielsku 'grid'- co często używane jest również w naszym języku}. Funkcja będąca rozwiązaniem jest wtedy przybliżana za pomocą stablicowanej postaci, zaś na wykresie aproksymowana jest przez łamaną łączącą kolejne punkty wykresu. W tej pracy skupimy się wyłącznie na tym rodzaju dyskretyzacji. 

Dyskretyzacje w dziedzinie pozostawiają bogatą rodzinę modeli. Różnice pomiędzy tymi modelami najczęściej dotyczą sposobu aproksymowania operatora pochodnej, ewentualnie ilości składowych przy rozwijaniu wartości funkcji w szeregi potęgowe. 


\section{Numeryczne rozwiązywanie równań zwyczajnych}

W sekcji tej rozważamy zagadnienie Cauchy'ego (patrz problem \ref{prob-zagadnienie-cauchy}) pierwszego rzędu. Omówmy kilka najprostszych schematów przybliżonego rozwiązywania takich równań.

\subsection{Schemat otwarty Eulera}

\begin{definition}[Przybliżenie pochodnej dla schematu otwartego]
Przybliżeniem pochodnej w modelach dyskretyzacji opartych o schemat otwarty Eulera nazywamy przybliżenie pochodnej funkcji $\ddx{t}x$ za pomocą formuły 
$$
 \frac{x(t+h) - x(t)}{h},
$$
gdzie $h >0, h \in \setR $ jest ustalonym krokiem. 
\end{definition}
Jest to operator liniowy z definicji \ref{operator_wporzd}. 
\begin{algorithm}[Schemat otwarty Eulera]\label{Euler_algoritm}
Następujące postępowanie służące do rozwiązywania problemu \ref{prob-zagadnienie-cauchy} nazywamy schematem otwartym Eulera:
\begin{enumerate}
\item Ustalamy $N$ ilość punktów w dziedzinie równania. 
\item Dla ustalonego $N$ wyznaczamy krok $h>0$ według wzoru $h=\frac{T_N - t_0}{N}$. 
\item Generujemy dyskretyzację dziedziny dla $ n \in \set{0,\cdots,N}  t_0 = t_0, t_1 = t_0 + h, \cdots, t_N = t_{0}+ Nh$. 
\item Ustalamy $x(t_0) = x_0$ zgodnie z warunkiem początkowym.
\item Dla kolejny $n \in \set{1, \ldots, N}$ stosujemy wzór
$$
x(t_{n}) = x(t_{n-1}) + h f(t_{n-1}, x(t_{n-1})).
$$
\end{enumerate}
\end{algorithm}
Schemat Eulera otwarty jest najprostszym sposobem rozwiązywania równań różniczkowych.  
\subsection{Schemat otwarty Rungego-Kutty rzędu 4}
W przypadku schematu otwartego Rungego - Kutty rzędu 4 punkty $ (1) - (4) $ z algorytmu \ref{Euler_algoritm} są takie same. Różnica następuje w punkcie $(5)$ czyli we wzorze, dzięki któremu wyznaczamy wartości $x(t_n)$. Metoda ta jest dokładniejsza od wspomnianej wcześniej metody Eulera.
\begin{algorithm}
Dla problemu \ref{prob-zagadnienie-cauchy} następujące postępowanie nazywamy schematem Rungego-Kutty rzędu 4 
\begin{enumerate}
\item Ustalamy $N$ ilość punktów w dziedzinie równania. 
\item Dla ustalonego $N$ wyznaczamy krok $h>0$ według wzoru $h=\frac{T_N-t_0}{N}$. 
\item Generujemy dyskretyzację dziedziny dla $n \in \set{0,\cdots,N}  t_0 = t_0, t_1 = t_0 + h, \cdots, t_N = t_{0}+ Nh$. 
\item Ustalamy $x(t_0) = x_0$ zgodnie z warunkiem początkowym.
\item Dla kolejny $n \in \set{1, \ldots, N}$ stosujemy wzór
$$
x(t_{n}) = x(t_{n-1}) + \frac{h}{6} ( K_1 + 2K_2 + 2K_3 + K_4 )
$$
gdzie :
$$
\begin{array}{cl}
K_1 &= f(t_{n-1},x_{n-1}) \\
K_2 &= f(t_{n-1} + \frac{h}{2}, x_{n-1} + \frac{h}{2} K_1) \\
K_3 &= f(t_{n-1} + \frac{h}{2}, x_{n-1} + \frac{h}{2} K_2) \\
K_4 &= f(t_{n-1} + h, x_{n-1} + hK_3) 
\end{array}
$$
\end{enumerate}
\end{algorithm}

\section{Teoria zbieżności schematów jednokrokowych}
Interesuje nas czy zaproponowane przez nas rozwiązanie problemu dyskretnego zgadza się z rozwiązaniem problemu ciągłego. Zagadnieniem tym zajmuje się teoria zbieżności schematów. Wprowadźmy kilka pojęć. 

\begin{definition}[Schemat k krokowy \citep{marcinkowski2011numeryczne}]
Schematem $k$ krokowym rozwiązania problemu \ref{prob-zagadnienie-cauchy} ze stałym krokiem $h>0$ na odcinku $[t_0,T]$ nazywamy równanie
\begin{equation}\label{k-steps-scheme}
x_n = \Phi (h,t_n,x_{n-k},\cdots,x_{n-1},x_n) ,
\end{equation}
dla $ n \geq k$ z warunkami startowymi $x_0,\cdots, x_{k-1}$ gdzie $t_n = t_0 + nh$.
\end{definition}
Łatwo zaobserwować, że schemat Eulera oraz Rungego-Kutty rzędu 4 pasują do powyższej definicji. 

\begin{definition}[Błąd schematu jednokrokowego \citep{marcinkowski2011numeryczne}]
Niech $ x \in C^{1}([t_0,T])$ będzie rozwiązaniem problemu \ref{prob-zagadnienie-cauchy} oraz $t=t_0 +nh \in [t_0,T]$. Błąd schematu $k$ krokowego postaci \eqref{k-steps-scheme} jest postaci 
$$
E_h(t) = |x^{h}_{n} - x(t)|,
$$ 
natomiast błąd globalny 
$$
E_h = \max_{n=0,\cdots,N} E_h(t^{h}_{n}).
$$
\end{definition}
\begin{definition}[Zbieżność schematu \citep{marcinkowski2011numeryczne}]
Schemat jest zbieżny na $[t_0,T]$ jeśli 
$$
E_h \to 0, \quad h \to 0,
$$
a jest zbieżny z rzędem $p$ gdy dodatkowo dla pewnej stałej $C>0$ niezależnej od $h>0$ zachodzi 
$$
E_h \leq C h^p.
$$
\end{definition}
\begin{definition}[Błąd lokalny \citep{marcinkowski2011numeryczne}]
Niech $x \in C^1([t_0,T]) $ będzie rozwiązaniem problemu \ref{prob-zagadnienie-cauchy}. Dla $h>0$ i schematu $k$ krokowego postaci \eqref{k-steps-scheme} błąd lokalny jest postaci
\begin{equation}
e_h = \max_{t \in [t_0,T-kh]} |x(t + kh) - \Phi (h,t,x(t),\cdots, x(t + kh))|.
\end{equation}
\end{definition}
\begin{definition}[Rząd schematu \citep{marcinkowski2011numeryczne}]
Schemat \eqref{k-steps-scheme} jest rzędu $p$ jeśli dla $x \in C^{p+1}([t_0,T])$ gdzie $x$ jest rozwiązaniem problemu \ref{prob-zagadnienie-cauchy} zachodzi
$$
e_h \leq C h^{p+1},
$$
gdzie $C$ jest pewną stałą niezależną od $h$. 
\end{definition}
\begin{definition}[Schemat jednokrokowy \citep{marcinkowski2011numeryczne}]
Schematem jednokrokowym dla problemu \ref{prob-zagadnienie-cauchy} dla stałego kroku $h = \frac{T-t_0}{N}$ nazywamy równanie różnicowe postaci:
$$
x_{n+1} = x_n + h g(h,t_{n},x_{n},x_{n+1}),  
$$
dla $n= \set{0,\cdots,N-1}$ oraz gdzie $t_{n} = t_{0} + nh$, a $g$ jest funkcją ciągłą określoną na $[0,H) \times [t_0,T) \times U_{x_0} \times U_{x_0} $ gdzie $ U_{x_0} $ jest otoczeniem $x_0$.   
\end{definition}
\begin{definition}[Schemat jednokrokowy otwarty \citep{marcinkowski2011numeryczne}]
Przy założeniach powyższej definicji, schematem jednokrokowym otwartym nazywamy 
$$
x_{n+1} = x_n + h g(h,t_{n},x_{n}),  
$$
\end{definition}
 
\begin{definition}[Zgodność schematu różnicowego \citep{marcinkowski2011numeryczne}]\label{definition-consistency}
Schemat jednokrokowy jest zgodny jeśli :
\begin{itemize}
\item $g$ jest ciągła ze względu na wszystkie zmienne,
\item $g(0,t,x,x) = f(t,x)$ dla każdego $(t,x) \in (a,b) \times \setR$ ,
\item $g$ jest lipschtizowska ze względu na zmienne $x_n$ i $x_{n+1}$ tzn, istnieje stała $L>0$ taka, że dla wszystkich $x_1,x_2,y_1,y_2 \in U_{x_0}$ zachodzi
$$
\abs{g(h,t,x_1,x_2) - g(h,t,y_1,y_2)} \leq L  ( \abs{x_1 - y_1} + \abs{x_2 - y_2}).
$$
\end{itemize}
\end{definition}
Wykażmy teraz twierdzenie o zbieżności schematów jednokrokowych otwartych. 
\begin{theorem}[O zbieżności schematu jednokrokowego \citep{marcinkowski2011numeryczne}] \label{theorem-convergence-one-step-schema} 
Jeśli rozwiązanie problemu \ref{prob-zagadnienie-cauchy} $x \in C^{p+1}([t_0,T])$, schemat jednokrokowy jest zgodny i jest rzędu $p\geqslant1$, to ten schemat jest zbieżny z rzędem p. 
\end{theorem}
\begin{proof}[Dowód twierdzenia \ref{theorem-convergence-one-step-schema} dla schematów otwartych]
Niech $ x \in C^{p+1}([t_0,T]) $ będzie rozwiązaniem problemu \ref{prob-zagadnienie-cauchy}. Niech $ N \in \setN $ i $ h = \frac{T-t_0}{N} $. Niech $g$ będzie funkcją ze schematu jednokrokowego otwartego dla problemu \ref{prob-zagadnienie-cauchy}. Załóżmy, że schemat ten jest zgodny tzn. 
\begin{itemize}
\item $g$ jest ciągła ze względu na wszystkie zmienne 
\item $ g(0,t,x) = f(t,x)$ dla wszystkich $ (t,x) \in (a,b) \times \setR $
\item $ \exists_{L>0} $ takie, że dla wszystkich $x_1 , x_2 \in U_{x_{0}} $, $L$ niezależne od $h$ zachodzi
$$
\abs{g(h,t,x_1) - g(h,t,x_2)} \leq L  \abs{x_1 - x_2} ,
$$
\end{itemize}
i jest rzędu $p$. 
Oznaczmy przez $ (x_n)_{n-0}^{N} $ ciąg wartości uzyskanych ze schematu jednokrokowego otwartego oraz $(t_n)_{n=0}^{N}$ ciąg czasów, opisanych formułą $ t_n = t_0 + nh $ , $ n \in \set{0, \cdots, N} $. Oznaczmy przez $E_n = x_n - x(t_n)$ błąd pomiędzy obliczonym schematem przybliżeniem rozwiązania dla czasu $t_n$, a dokładną wartością rozwiązania $x(t_n)$. Niech 
$$
\tau_n = x(t_{n+1}) - x(t_n) - h(g(h,t_n,x_n).
$$ Zauważmy, że 
$$
E_n = E_{n-1} + h(g(h,t_{n-1},x_{n-1}) - g(h,t_{n-1},x(t_{n-1}))) - \tau_{n-1}. 
$$ 
Istotnie
\begin{equation}
\begin{array}{rl}
P &= E_{n-1} + h(g(h,t_{n-1},x_{n-1}) - g(h,t_{n-1},x(t_{n-1}))) - \tau_{n-1} \\
 &= x_{n-1} - x(t_{n-1} + h(g(h,t_{n-1},x_{n-1}) - g(h,t_{n-1},x(t_{n-1}))) - \tau_{n-1} \\
 &= x(t_{n}) - x(t_{n-1}) - h(g(h,t_{n-1},x_{n-1}) \\
 &= x_{n-1} + hg(h,t_{n-1},x(t_{n-1})) - x(t_n) \\
 &= x_n - x(t_n) = E_n .
\end{array}
\end{equation} 
Pokażemy, że zachodzi 
\begin{equation} \label{proof1}
\forall_{n \in \set{1,\cdots,N}} \quad  \abs{E_n} \leq (1 + h \cdot L) \abs{E_{n-1}} + \abs{\tau_{n-1}} .
\end{equation}
Istotnie, niech $n \in \set{1,\cdots,N} $ 
\begin{equation}
\begin{array}{rl}
\abs{E_n} &= \abs{E_{n-1} + h(g(h,t_{n-1},x_{n-1}) - g(h,t_{n-1},x(t_{n-1}))) - \tau_{n-1}} \\
&\leq \abs{E_n-1} + h \abs{g(h,t_{n-1},x_{n-1}) - g(h,t_{n-1},x(t_{n-1}))} + \abs{ \tau_{n-1}}\\
&\leq \abs{E_n-1} + h \cdot L \abs{x_{n-1} - x(t_{n-1})} + \abs{ \tau_{n-1}}\\
&= \abs{E_n-1} + \abs{E_n-1} h \cdot L + \abs{ \tau_{n-1}}\\
&= \abs{E_n} \leq (1 + h \cdot L) \abs{E_{n-1}} + \abs{\tau_{n-1}} .
\end{array}
\end{equation}
Z dowolności $n \in \set{1, \cdots, N}$ mamy \eqref{proof1}. 
Zauważmy, że 
\begin{equation} \label{proof2}
\forall_{n \in \set{1,\cdots,N}} \quad \abs{E_n} \leq (1 + h \cdot L)^{n} \abs{E_0} + \sum_{k=0}^{n-1} (1+ h \cdot L)^{n-k-1} \abs{\tau_k}. 
\end{equation}
Istotnie dla ustalonego $n$, stosując \  \eqref{proof1} \  $n-1$ \  krotnie otrzymujemy \ \eqref{proof2} . Korzystając z tego, że \footnote{Dowód tej własności znajdziemy w \ref{dowod_wlasnosci}} $|1+x|\leqslant e^{|x|}$ otrzymujemy
$$
\forall_{n \in \set{1,\cdots,N}} \quad (1 + h \cdot L)^{n} \leq (1 + h \cdot L)^{N} \leq e^{N \cdot h \cdot L} \leq e^{L \cdot (T-t_0)} .
$$
Dla $n$ takich, że $h\cdot n\leq  T - t_0 $ widzimy, że
$$
\abs{E_n} \leq e^{L \cdot (T-t_0)} \bracket{\abs{E_0} + \sum_{k=0}^{n-1}\abs{\tau_k}}.
$$
Zauważmy, że $E_0 = 0$. Widzimy też, że 
$$
\abs{\tau_n} \leq e_h.
$$
Ponieważ schemat ma rząd $p$ to istnieje  $C>0$ \ takie, że $e_h \leq Ch^{p+1} $ . Zatem
$$
\abs{E_N} \leq  e^{L \cdot (T-t_0)} \cdot N \cdot Ch^{p+1}
= e^{L \cdot (T-t_0)} \frac{T-t_0}{h} \cdot Ch^{p+1}
= e^{L \cdot (T-t_0)} (T-t_0) Ch^p.
$$
Z dowolności $N$ mamy
$$
\forall_{N \in \setN} \quad \abs{E_N} \leq e^{L \cdot (T-t_0)} (T-t_0) Ch^p.
$$
Gdy $ N \to \infty $ to $ h \to 0 $ oraz $ E_N \to 0$. Zatem schemat jest zbieżny z rzędem $p$.
\end{proof}


\section{Przykłady rozwiązywania równań za pomocą schematów dla problemów początkowych}
W sekcji tej zaprezentujemy przykłady wykorzystujące schemat Eulera otwarty(w skrócie będziemy pisali schemat Eulera) oraz Rungego-Kutty rzędu 4 (w skórcie będziemy oznaczali RK4). Weźmy równanie różniczkowe postaci:
$$
x'' = -x \quad x(0)=0, x'(0) = 1.
$$
Jego rozwiązaniem jest funkcja $\sin(t)$. Zdefiniujmy teraz kody odpowiadające naszym schematom. Potrzebne będzie 5 parametrów:
\begin{itemize}
\item równania (funkcję prawej strony równania)
\item warunku początkowego
\item kroku $h$, 
\item chwili $t_0$
\item oraz ilości kroków $N$.
\end{itemize}
\begin{example}\;abel{example-otwarty-euler}
Zacznijmy od schematu Eulera. Przypomnijmy wzór dla tego algorytmu:
$$
x(t_n) = x(t_{n-1}) + hf(t_{n-1},x(t_{n-1})) \quad n \in \set{1,\cdots,N-1}.
$$
Kod dla schematu Eulera:
<<>>=
schemat_otwarty = function(rownanie1, x0 , t0, h, N){
  t = seq(from=t0, to=t0+N*h,length.out = N+1)
  xn = matrix(0, nrow = length(x0), ncol = N+1)
  xn[,1] = x0
  t[1] = t0
  for (i in 2:(N+1)){
    xn[,i] = xn[,i-1]+h*rownanie1(t[i-1], xn[,i-1])
  }
  result1 = list(time=t, values=xn)
  return(result1)
}

@
Przypomnijmy wzór na schemat otwarty RK4
$$
x(t_{n}) = x(t_{n-1}) + \frac{h}{6} ( K_1 + 2K_2 + 2K_3 + K_4 ) \quad n \in \set{1,\cdots,N-1}
$$
gdzie 
$$
\begin{array}{cl}
K_1 &= f(t_{n-1},x_{n-1}) \\
K_2 &= f(t_{n-1} + \frac{h}{2}, x_{n-1} + \frac{h}{2} K_1) \\
K_3 &= f(t_{n-1} + \frac{h}{2}, x_{n-1} + \frac{h}{2} K_2) \\
K_4 &= f(t_{n-1} + h, x_{n-1} + hK_3) 
\end{array}
$$
Kod dla schematu RK4:
<<>>=
RK4_otwarty= function(rownanie2, x0 , t0, h, N){
  t = seq(from=t0, to=t0+N*h,length.out = N+1)
  xn = matrix(0, nrow = length(x0), ncol = N+1)
  xn[,1] = x0
  t[1] = t0
  for (i in 2:(N+1)){
    K1 = rownanie2(t[i-1],  xn[,i-1])
    K2 = rownanie2(t[i-1] + (h/2), xn[,i-1] + (h/2)*K1)
    K3 = rownanie2(t[i-1] + (h/2), xn[,i-1] + (h/2)*K2)
    K4 =  rownanie2(t[i-1] + h, xn[,i-1] + h*K3)
    xn[,i] = xn[,i-1]+(h/6)*(K1 + 2*K2 + 2*K3 + K4)
   
  }
  result2 = list(time=t, values=xn)
 return(result2)
}
@

Równania wykorzystane w schemacie Eulera i RK4 są postaci odpowiednio:
<<>>=
rownanie1 = function(t ,x) {
  y = rep(0, times =2)
  y[1] = x[2]
  y[2] = -x[1]
  return(y)
}

x0 = c(0, 1)
t0 = 0
t_end = 80
N = 100
h = (t_end - t0) / N


solution1 = schemat_otwarty(rownanie1, x0, t0, h , N)
@
<<>>=
rownanie2 = function(t ,x) {
  y = rep(0, times =2)
  y[1] = x[2]
  y[2] = -x[1]
  return(y)
}

x0 = c(0, 1)
t0 = 0
t_end = 80
N = 100
h = (t_end - t0) / N


solution2 = RK4_otwarty(rownanie2, x0, t0, h , N)
@

Przedstawimy wspólny wykres funkcji $\sin(t)$ porównujący te dwa schematy. Kolor czerowny odpowiada przybliżeniu otrzymanego przez schemat Eulera, zielony obrazuje przybliżenie otrzymane z RK4.
<<fig=TRUE>>=
t = seq (t0, to= 20*pi, by=0.01)
plot(t, sin(t), type = 'l', col = 'black')
lines(solution1$time, solution1$values[1,], col='red')
lines(solution2$time, solution2$values[1,], col='green')
@

Patrząc na zaprezentowane przez nas wyżej wzory definiujące odpowiednie schematy, można było przypuszczać, który ze schematów okaże się dokładniejszy. Wykres pokazuje, że schemat RK4, przez to że ma wzór złożony z większej ilości składowych, daje nam lepsze przyblżenie niż prostszy schemat Eulera.
\end{example}
\begin{example}
W teh częsci pokażemy jak istotny jest dobór odpowiedniego $N$. Różnice zaprezentujemy dla funkcji $sin(t)$ przybliżając ją schematem RK4. 
\begin{itemize}
\item $N=10000$,
\item $N=1000$,
\item $N=100$.
\end{itemize}
Zatem weźmy $N=10000$:
<<>>=
rownanie2_1 = function(t ,x) {
  y = rep(0, times =2)
  y[1] = x[2]
  y[2] = -x[1]
  return(y)
}

x0 = c(0, 1)
t0 = 0
t_end = 80 
N = 10000
h = (t_end - t0) / N


solution2_1 = RK4_otwarty(rownanie2_1, x0, t0, h , N)
@

Prezentujemy wspólny wykres. Kolor czerowny odpowiada przybliżeniu uzyskanemu ze schematu RK4 dla $N=10000$.

<<fig=TRUE>>=
t = seq (t0, to= 20*pi, by=0.01)
plot(t, sin(t), type = 'l', col = 'black')
lines(solution2_1$time, solution2_1$values[1,], col='red')
@

Dla $N=1000$
<<>>=
rownanie2_2 = function(t ,x) {
  y = rep(0, times =2)
  y[1] = x[2]
  y[2] = -x[1]
  return(y)
}

x0 = c(0, 1)
t0 = 0
t_end = 80 
N = 1000
h = (t_end - t0) / N


solution2_2 = RK4_otwarty(rownanie2_2, x0, t0, h , N)
@

Generujemy wykres. Kolor zielony odpowiada przybliżeniu uzyskanemu ze schematu RK4, dla $N=1000$.
<<fig=TRUE>>=
t = seq (t0, to= 20*pi, by=0.01)
plot(t, sin(t), type = 'l', col = 'black')
lines(solution2_2$time, solution2_2$values[1,], col='green')
@

Dla $N=100$
<<>>=
rownanie2_3 = function(t ,x) {
  y = rep(0, times =2)
  y[1] = x[2]
  y[2] = -x[1]
  return(y)
}

x0 = c(0, 1)
t0 = 0
t_end = 80
N = 100
h = (t_end - t0) / N


solution2_3 = RK4_otwarty(rownanie2_3, x0, t0, h , N)
@

Ponownie obejrzyjmy wykres. Tym razem przybliżenie otrzymane dla $N=100$ oznaczone jest kolorem fioletowym.
<<fig=TRUE>>=
t = seq (t0, to= 20*pi, by=0.01)
plot(t, sin(t), type = 'l', col = 'black')
lines(solution2_3$time, solution2_3$values[1,], col='purple')
@

Zaprezentujemy teraz wykres wspólny dla $N=10000$, $N=1000$, $N=100$.
<<fig=TRUE>>=
t = seq (t0, to= 20*pi, by=0.01)
plot(t, sin(t), type = 'l', col = 'black')
lines(solution2_1$time, solution2_1$values[1,], col='red')
lines(solution2_2$time, solution2_2$values[1,], col='green')
lines(solution2_3$time, solution2_3$values[1,], col='purple')
@

Eksperyment ten pokazuje nam jak istotną role odgrywa odpowiedni dobór parametru $N$. Im większe $N$, tym mniejsze $h$, zatem otrzymujemy większe zagęszczenie siatki, przez co nasze przybliżenia są dokładniejsze. 

\end{example}
\chapter{Numeryczne zagadnienia brzegowe}
W tym rozdziale odmiennie niż w rozdziałach poprzednich posługiwać się  będziemy literą $u$ do oznaczania poszukiwanej funkcji. Zmienne w równaniu oznaczać natomiast będziemy $x$,$y$. Ponadto zastosujemy następujące oznaczenie dla pochodnych w równaniu:
\begin{itemize}
\item pierwszą pochodną danej funkcji zamiast $\ddx{x} u(x) $ będziemy oznaczali przez $u_{x}$,
\item drugą pochodną danej funkcji zamiast $\ddx[^2]{x} u(x)$ będziemy oznaczali przez $u_{xx}$.
\end{itemize}
Oznaczenia przyjęte w tej części są typowe w teorii równań cząstkowych. 
\section{Schemat brzegowy dla problemu jednowymiarowego}
Rozważmy następujące zagadnienie brzegowe. Niech $ x \in \Omega = (a,b) $
\begin{equation} \label{boundary_diff_equa}
\left\{ \begin{array}{ll}
-u_{xx}(x) + cu(x) =f(x), & x \in \Omega,\\
u(a) = \alpha, & \\
u(b) = \beta. & 
\end{array} \right.
\end{equation}
gdzie stała $c$ jest nieujemna, odcinek $ [a,b]$ jest ustalony i znane są wartości $\alpha$ oraz $\beta$. Wykorzystajmy wzór na różnicę skończoną w przód i różnicę skończoną w tył z definicji \ref{operator_wporzd} oraz \ref{operator_wtyl} . Dla $h>0$ :
\begin{equation} \label{finite_diff}
\begin{array}{c}
\delta_h u(x) = \frac{u(x+h) - u(x)}{h},   \\
\overline{\delta_h} u(x) = \frac{u(x)-u(x-h)}{h} . 
\end{array}
\end{equation}
Jeżeli $h$ będzie miało ustaloną wartość to będziemy opuszczali indeks dolny. Przyjmijmy następujące przybliżenie drugiej pochodnej:
$$
-u_{xx}(x) \approx -\delta \overline{\delta} u(x).
$$
Podstawmy \eqref{finite_diff} do \eqref{boundary_diff_equa}. Wówczas dla ustalonego $h>0$ mamy: 
\begin{equation}
\begin{array}{rl}
-\delta (\frac{u(x)-u(x-h}{h}) + cu(x) &= f(x),  \\
- \frac{1}{h} (\delta u(x) - \delta u(x-h) ) + cu(x) &= f(x), \\
-\frac{1}{h} (\frac{u(x+h)-u(x)}{h} - \frac{u(x)-u(x-h)}{h}) + cu(x) &= f(x), \\
-\frac{u(x+h)}{h^2} + \frac{u(x)}{h^2} + \frac{u(x)}{h^2} - \frac{u(x-h)}{h^2} +cu(x)& = f(x), \\
-\frac{u(x+h)}{h^2} + 2\frac{u(x)}{h^2} - \frac{u(x-h)}{h^2} +cu(x) &= f(x) .
\end{array}
\end{equation}
Mnożąc obie strony przez $-h^2$ otrzymujemy:
\begin{equation}
u(x+h) - 2u(x) + u(x-h) - cu(x)h^2 = -f(x)h^2,
\end{equation}
wprowadźmy siatkę, czyli zbiór dyskretny dla $ h= \frac{b-a}{N}$ , $k \in \set{1,\cdots,N-1}$. Mamy: 
\begin{equation} \label{boundary_model}
u(x_{k+1}) = 2u(x_k) - u(x_{k-1}) + cu(x_k)h^2 + f(x_k)h^2.
\end{equation}
W zagadnieniach brzegowych nie jest znana wartość $u(x_1)$. Zauważmy, że gdy rozważymy jej wartość $u(x_1) = s \in \setR$, to stosując nasz schemat możemy obliczyć wszystkie kolejne iteracje. Zatem nasze zadanie wymagać będzie rozwiązania problemu odnalezienia takiego $s$, że $u(x_1) = s$ i $u(x_k) = \beta$. Przyjmując oznaczenie $ x_k = x_0 + kh$, dla $ k \in \set{1, \cdots,N-1} $ otrzymujemy układ równań liniowych postaci:
\begin{equation}
\left\{ \begin{array}{ll}
u(x_0) = \alpha ,& \\
u(x_2) = 2u(x_1) - u(x_{0}) + cu(x_1)h^2 + f(x_1)h^2 ,& \\ 
\vdots  & \\
u(x_{N}) = 2u(x_{N-1}) - u(x_{N-2}) + cu(x_{N-1})h^2 + f(x_{N-1})h^2 , & \\
u(x_N) = \beta. &
\end{array} \right.
\end{equation}
Otrzymaliśmy układ $N+1$ równań liniowych z $N+1$ niewiadomymi. Problem w obecnej postaci jesteśmy wstanie rozwiązać, o ile otrzymana macierz jest nieosobliwa. Zapiszmy ten układ za pomocą postaci macierzowej :
$$ 
\left[ \begin{array}{ccccc}
1 & 0 & 0 & \cdots &0 \\
1 & -2-ch^2 & 1 &\cdots &0 \\
0 & 1 & -2-ch^2 &\cdots &0 \\
\vdots & \vdots & \vdots &  &\vdots \\
0& 0 & \cdots& 1 & -2-ch^2 \\
0 & 0 & 0&\cdots & 1 
\end{array} \right] \cdot
\left[ \begin{array}{c}
u_0 \\
u_1 \\
u_2 \\
\vdots \\
u_{N-1} \\
u_{N}  
\end{array} \right] =
\left[ \begin{array}{c}
\alpha \\
-f(x_1)h^2 \\
-f(x_2)h^2\\
\vdots \\
-f(x_{N}) \\
\beta   
\end{array} \right] .
$$
Warto zauważyć, że możemy usunąć pierwszy i ostatni wiersz otrzymując  wtedy :
$$
\left[ \begin{array}{ccccc}
-2-ch^2 & 1 & 0 & \cdots & 0 \\
1 & -2-ch^2 & 1& \cdots & 0 \\
0 & 1 & -2-ch^2& \cdots & 1 \\
\vdots &  & \ddots & \ddots & \vdots \\ 
0 & 0 & \cdots & 1 & -2-ch^2 \\
\end{array} \right] \cdot
\left[ \begin{array}{c}
u_1 \\
u_2 \\
u_3 \\
\vdots \\
u_{N-1} 
\end{array} \right] =
\left[ \begin{array}{c}
-f(x_1)-\alpha \\
-f(x_2)h^2 \\
-f(x_3)h^2\\
\vdots \\
-f(x_{N-1})h^2 -\beta    
\end{array} \right] . 
$$
Rozwiązując powyższy układ otrzymamy taką wartość $u(x_1)$, że $u(x_N) = \beta$. Powyższy algorytm nazywać będziemy schematem brzegowym dla równań liniowych rzędu drugiego. 

\section{Przykładowe rozwiązanie przy użyciu schematu brzegowego jednowymiarowego}
W tej części zaprezentujemy przykładowe rozwiązanie otrzymane przy wykorzystaniu schematu brzegowego jednowymiarowego. Przyjrzymy się liniowemu równaniu drugiego stopnia niejednorodnemu z warunkami brzegowymi w przypadku jednowymiarowym. Interesuje nas równanie postaci
$$
\left\lbrace
\begin{array}{c}
-u''(x) + c u(x) = f(x), \quad x \in (a,b), \\
u(a) = \alpha \\
u(b) = \beta
\end{array}
\right.
$$
Do rozwiązania tego zagadnienia wykorzystamy nietypowy bo mieszane przybliżenie operatora drugiej pochodnej. Dokładnie skorzystamy z operatorów 
$$
\delta_h \colon u \mapsto \frac{u(x+h) - u(x)}{h}
$$
oraz
$$
\overline{\delta}_h \colon u \mapsto \frac{u(x) - u(x-h)}{h}
$$
Do aproksymacji drugiej pochodnej użyjemy następującego operatora:
$$
u'' \approx \delta_h \overline{\delta}_h u.
$$
\begin{example}
W tym przykładzie konkretnie omówimy równanie drugiego rzędu postaci
$$
u'' = -u \quad u(0)=0, u'(0) = 1.
$$
Jego rozwiązaniem jest funkcja $\sin(t)$. Zdefiniujmy kod dla naszego schematu. Potrzebne będzie 7 paramterów:
\begin{itemize}
\item Ilość kroków $N$.
\item Warunki brzegowe $t0$, $tN$, $x0$, $xN$.
\item Funkcja prawie strony $f$.
\item Stała $c$.
\end{itemize}
Krok $h$ wyliczamy według formuły $\frac{tN-t0}{N}$.
<<>>=
schemat_brzegowy = function(f, c , t0 , tN, x0, xN , N)
{
  h = (tN-t0)/N
  t = seq(from=t0+h, to=t0+(N-1)*h,length.out = N-1)
  A = diag(-2-c*h^2,nrow=N-1,ncol=N-1)
  A[row(A) - col(A) == -1] = 1
  A[row(A) - col(A) == 1] = 1
  b = -1 * f(t) * h
  b[1] = b[1] - x0
  b[N-1] = b[N-1] - xN
  x = solve(A, b)
  result = list(time=c(t0, t, tN), values = c(x0, x, xN))
  return(result)
}
@

Zdefiniujmy funkcje $f$ zawartą w kodzie.
<<>>=
f = function(t){
  return(rep(0,times = length(t)))
}
c = -1
t0 = 0
tN = 5*pi/2
x0 = 0
xN = 1
N =100

solution = schemat_brzegowy(f,c, t0, tN, x0, xN, N)
@

Przedstawimy wykres funckji $sin(t)$ wraz z przybliżeniem otrzymanym z algorytmu. Przybliżenie otrzymane przy użyciu schematu brzegowego jednowymiarowego oznaczone jest kolorem czerwonym.
<<fig=TRUE>>=
t = seq(0,to=4*pi, length.out = 1000)
plot(t, sin(t),type = 'l')
lines(solution$time, solution$values,col='red')
@

\end{example}
\section{Schemat brzegowy dla problemu dwuwymiarowego}
\begin{problem}
Rozważmy modelowe zadanie eliptyczne na kwadracie jednostkowym $ \overline{\Omega} = [0,1]^2 $ postaci 
\begin{equation} \label{eliptical_equation}
\left\{ \begin{array}{ll}
-\Delta u(x) + cu(x) = f(x) & x \in \Omega\\
u(s) = g(s) & s \in \overline{\Omega}
\end{array} \right.
\end{equation}
gdzie $\Delta u = x_{xx} + u_{yy}$, a $c$ jest ustaloną nieujemną stałą. Funkcja $f$ jest ciągła na $\Omega$, natomiast funkcja $g$ jest ciągła na $\delta \Omega$. Zakładamy, że istnieje jednoznaczne rozwiązanie \eqref{eliptical_equation}. Dla $h>0$ korzystając z różnicy skończonej wprzód i w tył z \eqref{finite_diff} zastosujemy następującą aproksymację drugiej pochodnej cząstkowej :
\begin{equation}
-(u_{xx} + u_{yy})= -\left(\frac{u(x-he_{k}) - 2u(x) + u(x+he_k)}{h^2}\right),
\end{equation}
gdzie $e_k$ jest k-tym wersorem. Zatem dla $ i,j \in \set{1,\cdots,N-1} $ otrzymujemy 
$$
-\left(\frac{u(x_{i-1,j}) - 4u(x_{i,j}) + u(x_{i+1,j})+u(x_{i,j-1})+u(x_{i,j+1})}{h^2}\right) + cu(x_{i,j}) = f(x_{i,j})
$$
mnożąc przez $-h^2$ otrzymujemy 
\begin{equation}\label{schemat_brzeg_II}
u(x_{i-1,j}) - 4u(x_{i,j}) + u(x_{i+1,j}) + u(x_{i,j-1}) + u(x_{i,j+1}) - ch^2u(x_{i,j}) = -h^2f(x_{i,j})
\end{equation}
dla $i,j \in \set{1,\cdots,N-1}$. Zatem nasz problem będzie postaci
\begin{equation}
\left\{ \begin{array}{ll}
-\left(\frac{u(x_{i-1,j}) - 4u(x_{i,j}) + u(x_{i+1,j})+u(x_{i,j-1})+u(x_{i,j+1})}{h^2}\right) + cu(x_{i,j}) = f(x_{i,j}) & i,j \in \set{1,\cdots, N-1} ,\\
u(x_{i,j}) = g(x_{i,j})  & i,j \in \set{0,\cdots,N} .
\end{array} \right.
\end{equation}
Zapis tego problemu dla siatki $i,j = \set{0,\cdots,N-1} $ jest zadaniem trudnym, dlatego algorytm ten zaprezentujemy na konkretnym przykładzie.
\begin{example}
Zacznijmy od stworzenia siatki, która będzie składała się z punktów postaci $x_{i,j} \in \Omega = [0,1]^2$ dla $i,j = \set{0,1,\cdots,5}$.
\begin{align*}
\begin{tabular}{|ccccc|}
\hline
$ x_{5,1}=a_8$ & $x_{5,2}=a_{10}$ & $x_{5,3}=a_{12}$ & $x_{5,4}=a_{14}$ &$ x_{5,5}=a_{16}$ \\
$x_{4,1} = a_6$ &$ x_{4,2}$ & $x_{4,3}$ & $x_{4,4}$ & $x_{4,5} = a_{15}$ \\
$x_{3,1} = a_4$ & $x_{3,2}$ & $x_{3,3}$ & $x_{3,4}$ & $x_{3,5} = a_{13}$ \\
$x_{2,1} = a_2$ & $x_{2,2}$ & $x_{2,3}$ & $x_{2,4}$ & $x_{2,5} = a_{11}$ \\
$x_{1,1} = a_1$ &$x_{1,2}=a_3$ & $x_{1,3}=a_5$ & $x_{1,4}=a_7$ & $x_{1,5} = a_{9}$ \\
\hline
\end{tabular}
\end{align*}
Punkty znajdujące się na brzegu naszej siatki są znane, ponieważ mamy dany warunek brzegowy. Biorąc punkt wewnątrz siatki, przykładowo $x_{2,2}$ można zauważyć, że będzie on przybliżany przez wartości czterech sąsiednich punktów. Podstawmy ten punkt do wzoru \eqref{schemat_brzeg_II} otrzymujemy wtedy
$$
u(x_{1,2}) - 4u(x_{2,2}) + u(x_{3,2}) + u(x_{2,1}) + u(x_{2,3}) - ch^2u(x_{2,2}) = -h^2f(x_{2,2}).
$$
Z warunku brzegowego znane są wartości brzegowe, wstawmy je do wzoru:
$$
a_3 - 4u(x_{2,2}) + u(x_{3,2}) + a_2 + u(x_{2,3}) - ch^2u(x_{2,2}) = -h^2f(x_{2,2}).
$$
Algorytm ten również stworzy nam układ równań liniowych tak jak w przypadku schematu brzegowego jednowymiarowego. Będzie on jednak o wiele bardziej skomplikowany z racji tego, że poruszamy się w zbiorze dwuwymiarowym. Zapiszemy nasz problem w postaci macierzowej. Dla uproszczenia zapisu przyjmijmy $u(x_{i,j}) = u_{i,j}, F= -4-ch^2$.
$$
\left[ \begin{array}{ccccccccc}
F & 1 & 1 & 0 & 0 & 0& 0 & 0 & 0\\
1 & F & 0 & 1 & 1 & 0 & 0 & 0 & 0 \\
1 & 0 & F & 0 & 1 & 1& 0 & 0 & 0 \\
0 & 1 & 0 & F & 0& 0 & 1 & 0 & 0  \\ 
0 & 1 & 1& 0 & F & 0& 1 & 1 & 0 \\
0 & 0 & 1 & 0 & 0 & F & 0 & 1 & 0 \\
0 & 0 & 0 & 1 & 1 & 0 & F & 0 & 1 \\
0 & 0 & 0 & 0 & 1 & 1 & 0 & F & 1 \\
0 & 0 & 0 & 0 & 0 & 0 & 1 & 1 & F
\end{array} \right] \cdot
\left[ \begin{array}{c}
u_{2,2} \\
u_{3,2} \\
u_{2,3} \\
u_{4,2} \\
u_{3,3} \\
u_{2,4} \\
u_{4,3} \\
u_{3,4} \\
u_{4,4}
\end{array} \right] =
\left[ \begin{array}{c}
-f(x_{2,2})-a_2 -a_3 \\
-f(x_{3,2})h^2 -a_4 \\
-f(x_{2,3})h^2 -a_5\\
-f(x_{4,2})h^2 -a_6 -a_{10} \\
-f(x_{3,3})h^2 \\
-f(x_{2,4})h^2 -a_7 -a_{11} \\
-f(x_{4,3})h^2 -a_{12} \\
-f(x_{3,4})h^2 -a_{13} \\
-f(x_{4,4})h^2 - a_{14} -a_{15} 
\end{array} \right] . 
$$

\end{example}
\end{problem}


\section{Przykładowe rozwiązanie równania eliptycznego przy użyciu schematu brzegowego dwuwymiarowego}
W tej części zajmiemy się zagadnieniem eliptycznym w przestrzeni dwuwymiarowej $\mathbb{R}^2$ postaci
$$
\left\lbrace
\begin{array}{c}
- \Delta u(x) + c u(x) = f(x),\quad x \in \Omega \\
u(s) = g(s), \quad s \in \delta \Omega.
\end{array}
\right.
$$
\begin{example}
Weźmy równanie róznicowe liniowe drugiego rzędu z warunkami brzegowymi postaci:
$$
\left\lbrace
\begin{array}{c}
-\Delta u(x,y) - \frac{\pi^2}{2}u(x,y) = f(x,y), \quad (x,y) \in \Omega, \\
u(x,y) = g(x,y), \quad (x,y) \in \delta \Omega.\\
\end{array}
\right.
$$
Rozwiązaniem tego równanie będzię funkcja $u$ postaci:
$$
u(x,y) = \sin(\frac{\pi}{2}x) \cdot \sin(\frac{\pi}{2}y)
$$
Zdefiniujmy teraz kod naszego algorytmu. Potrzebne będzie nam 8 zmiennych:
\begin{itemize}
\item Funkcję prawej strony $f$.
\item Wartość brzegową $g$.
\item Wartości $x0$, $xn$, $y0$, $yn$.
\item Wartość kroku $N$.
\item Stała $c$. 
\end{itemize}
<<>>=
translator= function(i, j, row_size){
  return ( (j-1) * row_size + i)
}

schemat_eliptyczny = function(f, c , g , x0, xn, y0, yn , N)
{
  h1 = (xn-x0) / N
  h2 = (yn-y0) / N
  x = seq(from=x0+h1, to=x0+(N-1)*h1,length.out = N-1)
  y = seq(from=y0+h2, to=y0+(N-1)*h2,length.out = N-1)
  size = (N-1)^2
  A = diag(4+c*h1*h2,nrow=size,ncol=size)
  b_norm = h1*h2*f(x,y)
  b = rep(0, times=(N-1)*(N-1))
  for (i in 1:(N-1)){
    for (j in 1:(N-1)){
      b[translator(i,j,N-1)] = b_norm[i,j]
    }
  }
  for (i in 1:(N-1)){
    for (j in 1:(N-1)){
      # u_{i-1,j}
      if (i == 1) {
        b[translator(i,j, N-1)] = b[translator(i,j, N-1)] + g(x0,y[j])
      } else {
        A[translator(i,j,N-1), translator(i-1,j,N-1)] = -1
      }
      # u_{i+1,j}
      if (i == N-1){
        b[translator(i,j,N-1)] = b[translator(i,j,N-1)] + g(xn,y[j])
      } else {
        A[translator(i,j, N-1), translator(i+1,j, N-1)] = -1
      }
      # u_{i,j-1}
      if (j == 1){
        b[translator(i,j,N-1)] = b[translator(i,j,N-1)] + g(x[i],y0)
      } else {
        A[translator(i,j,N-1), translator(i,j-1,N-1)] = -1
      }
      #u_{i,j+1}
      if (j == N-1){
        b[translator(i,j,N-1)] = b[translator(i,j,N-1)] + g(x[i],yn)
      } else {
        A[translator(i,j,N-1), translator(i,j+1,N-1)] = -1
      }
    }
  }
  u2 = solve(A, b) #definiujemy brzeg
  u = matrix(0, N+1, N+1)
  for (i in 1:(N-1)) {
    for (j in 1:(N-1)){
      u[i+1,j+1] = u2[translator(i,j,N-1)]
    }
  }
  u[1,1] = g(x0,y0);
  for (i in 1:(N-1)){
    u[i+1,1] = g(x[i], y0)
  }
  u[N+1,1] = g(xn,y0);
  for (j in 1:(N-1)) {
    u[N+1,j+1] = g(xn, y[j])
  }
  u[N+1,N+1] = g(xn,yn)
  for (i in 1:(N-1)){
    u[i+1,N+1] = g(x[i],yn)
  }
  u[1,N+1] = g(x0,yn)
  for (j in 1:(N-1)){
    u[1,j+1] = g(x0,y[j])
  }
  result = list(x=c(x0, x, xn), y = c(y0, y, yn), u = u)
  return(result)
}
@

Zdefiniujmy funckję użytą w naszym algorytmie:
<<>>=
f = function(x,y){
  n = length(x)
  m = length(y)
  return(matrix(0, m, n ))
}
c = -(pi)^2/2
x0 = 0
xn = 1
y0 = 0
yn = 1
N = 50

g = function(x, y)
{
  return( sin(x*pi/2) * sin(y*pi/2))
}

solution = schemat_eliptyczny(f, c , g , x0, xn, y0, yn , N)
@

Wygereujmy wykres pokazujący przybliżenie uzyskane po zastosowaniu naszego schematu.
<<fig=TRUE>>=
library(plot3D)
x = solution$x
y = solution$y
M = mesh(x,y)
surf3D(M$x,M$y, solution$u )
@


\end{example}



\chapter{Podsumowanie}
W pracy tej zajmowaliśmy się metodami numerycznymi do rozwiązywania równań różniczkowych. W obszarze naszych zainteresowań znalazły się zarówno równania zwyczajne, jak i pewne przypadki równań cząstkowych. W rozdziale trzecim rozpoczeliśmy omawianie metod numerycznego rozwiązywania równań różniczkowych, od ich zastosowania, do rozwiązywania zagadnień Cauchy'ego. W pracy prezentujemy uzupełniony o luki dowodowe, dowód faktu zbieżności schematów jednokrokowych otwartych. W części tej prezentujemy schemat otwarty Eulera oraz schemat Rungego-Kutty rzędu 4. Rozdział ten zakończony jest prezentacją własnych implemntacji tych dwóch schematów, napisamy w języku R. Skuteczność działania tych implrementacji została zaprezentowana na wybranym przykładzie w kilku wariantach. W kolejnym rozdziale przglądamy się już zagadnieniom brzegowym. Swoje rozważania ograniczamy do problemów liniowych rzędu drugiego. Za ich pomocą staramy się przekazać czytelnikowi, jaka jest jakościowa różnica w rozwiązywaniu zagadnień początkowych i zagadnień brzegowych. Pierwszym z rozważanych problemów, omówionych w sekcji 4.1 jest zagadnienie jednowymiarowe. Czytelnik w sekcji 4.2 odnajdzie samodzielnie opracowaną implementacje omówionego algorytmu. Jak również tam znajduje się prezentacja jego zastosowania do zagadnienia w omawianym typie. Dalszą część pracy poświęciliśmy rozwiązywaniu równań cząstkowych. W sekcji 4.3 prezentujemy schemat mający zastosowanie do zagadnień brzegowych z równaniem Laplace'a, Poissona lub bardzo podobnych. Prezentujemy ze szczegółami sposób wypracowania formuł rekurencyjnych schematu, opisujemy sposób transformacji do postaci układu równań oraz wskazujemy potencjalne przeszkody w działaniu algorytmu. Następnie w sekcji 4.4 prezentujemy najbardziej rozbudowane z opracowanych algorytmów, na potrzeby rozwiązania zagadnienia brzegowego z operatorem Laplace'a. 

Czytelnik w pracy tej odnajdzie wyważone wprowadzenie do kolejnych coraz trudniejszych schematów numerycznego rozwiązywania równań różniczkowych. Jednym z celów pracy było pokazanie przyrostów stopnia skomplikowania, uzależnionego od warunków równania. Dla rozwiązywania zagadnień początkowych obserwujemy, iż sprowadza się ono do iteracyjnego wyznaczania przybliżeń kolejnych punktów. Rozwiązywanie zagadnień brzegowych okazuje się być na ich tle wyraźnie trudniejszym zadaniem.  Schematy służące takiemu rozwiązywaniu zastosowanie mają jedynie do równań liniowych. Wystąpienie w równaniu nieliniowości wykluczyłoby możliwość zastosowania technik algebry liniowej. Po za tym, w odróżnieniu od zagadnień począkowych, w zależności od wartości w warunku brzegowym, problem może posiadać niejednoznaczne rozwiązanie. Ponadto zauważmy, że choć techniki te można przenieść do rozwiązywania równań cząstkowych (tylko równań liniowych), to w efekcie dostajemy do rozwikłania problemy liniowe o znacznie większej liczbie wymiarów. Dodatkowo dzięki tej pracy demonstrujemy iż język R może być wykorzystany jako doskonałe narzędzie wspierające w kursie równań różniczkowych

\appendix
\chapter{Wybrane nierówności liczb rzeczywistych}
\begin{lemma}
Dla dowolnego $x \in \setR$ zachodzi
$$
|x+1|\leqslant e^{|x|}.
$$
\end{lemma}
\begin{proof}
Dla dowolnego $x \in \setR $ mamy,że z wypukłości
\begin{equation}\label{dowod_wlasnosci}
e^x \geq (e^x)'(0)\cdot (x-0)+ e^0 = x+1
\end{equation}
Rozważmy następujące przypadki:
\begin{enumerate}
\item Gdy $ x \in [0, + \infty)$. Wynika wprost z \eqref{dowod_wlasnosci}.
\item Gdy $ x \in (-\infty, -1]$. Niech $ x \in (-\infty, -1]$, wtedy $-x \in (1, + \infty)$ zatem z \eqref{dowod_wlasnosci} mamy,że
$$
|x+1| = -x-1 \leq -x+1 \leq e^{-x} = e^{|x|}
$$
\item Gdy $x \in (-1,0)$. Ponieważ $ x \in (-1,0) \subset [-1,+\infty)$. Z \eqref{dowod_wlasnosci} mamy
$$
e^{|x|} \geq e^x \geq x+1 = |x+1|
$$
\end{enumerate}
\end{proof}






\bibliographystyle{plain}
\bibliography{bibliografia}




\end{document}